{"version":3,"sources":["assets/post.svg","components/layout/signedInLinks.jsx","components/layout/navbar.jsx","components/dashboard/post.jsx","components/dashboard/dashboard.jsx","assets/color-palette.svg","components/avatars/AvatarAttribute.jsx","components/avatars/CustomAvatar.jsx","store/actions/avatarActions.jsx","components/avatars/SubmitButton.jsx","assets/gif.svg","assets/gif-clicked.svg","components/avatars/UserInfo.jsx","store/actions/messageActions.jsx","components/projects/writeMessage.jsx","App.js","store/reducers/messagesReducer.js","store/reducers/avatarReducer.js","store/reducers/rootReducer.js","config/firebase.js","index.js"],"names":["connect","state","avatar","props","location","useLocation","className","pathname","isPlaceholder","to","id","src","postIcon","alt","style","width","height","bgColor","Navbar","Post","str","message","user","date","media","minWidth","minHeight","marginLeft","length","trim","moment","calendar","dateNow","Date","now","compose","messages","firestore","ordered","firestoreConnect","collection","orderBy","localStorage","getItem","console","log","toast","info","map","index","Option","stateValue","name","AvatarAttribute","title","undefined","pickerID","palette","onClick","onPickerClick","pickerType","color","colorValue","onChange","onColorChange","styleOpts","letter","optsObj","toUpperCase","slice","CustomAvatar","handleClick","e","target","currentTarget","parentClass","updateAvatarinState","capitalize","randomVal","array","Math","floor","random","onChangeColor","type","this","toggleColorPicker","setState","closeColorPicker","openHairColorPicker","openShirtColorPicker","openFaceColorPicker","includes","handleBlur","randomColor","replace","toString","generateRandomAvatar","callType","showRandomStylesTooltip","faceColor","sex","Object","keys","earSize","hairColor","hairStyle","eyeStyle","glassesStyle","noseStyle","mouthStyle","shirtStyle","shirtColor","newStyle","updateAvatarAction","AVTR","entries","key","value","textAlign","fontSize","bind","Component","dispatch","avatarStyle","getState","updateAvatar","SubmitButton","infoFilled","hidden","htmlFor","UserInfo","handleSubmitState","isBlank","submitDataToFireStore","uploadMessageAction","approved","setItem","handleSubmit","a","autoClose","image","Image","onload","onerror","error","handleGIFSelect","gif","images","fixed_height","url","handleGIFBlur","setTimeout","gifToggle","handleGIFToggle","maxLength","handleInput","onBlur","apiKey","onSelect","wrapperClassName","autoFocus","rating","gifSVGClicked","gifSVG","messagePayload","getFirebase","add","then","response","success","catch","err","uploadMessage","WriteMessage","App","exact","path","component","Dashboard","initState","messageList","timestamp","messagesReducer","action","avatarReducer","hairColorRandom","rootReducer","combineReducers","firebase","firebaseReducer","firestoreReducer","initializeApp","authDomain","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","firebaseConfig","config","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f675871.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/post.b0cca562.svg\";","import React from 'react'\nimport './navbar.scss'\nimport './signedInLinks.scss'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport Avatar from 'react-nice-avatar'\nimport { connect } from 'react-redux'\nimport postIcon from '../../assets/post.svg'\n\n\nconst SignedInLinks = (props) => {\n\n    const location = useLocation();\n    // console.log(location.pathname);\n\n        return (\n            <div className='signed-in-scaffold navlinks'>\n                <div className='neulink navtext'>\n                    {/* <img src={postIcon} alt=\"\" /> */}\n                    { location.pathname === '/' &&  props.avatar.isPlaceholder? \n                            <NavLink to='/add'><img id='post-message' src={postIcon} alt=\"\" /></NavLink>  \n                            : null\n                            \n                    }\n                    {/* { location.pathname === '/add' ? \n                            <NavLink to='/'>Back to Dashboard</NavLink> : null\n                    } */}\n                </div>\n                    {!(props.avatar.isPlaceholder) ? \n                        <NavLink to={location.pathname=== '/' ? '/add' : '/'}>\n                            <Avatar className='avatar-link' style={{ width: '50px', height: '50px' }} \n                            {...props.avatar} bgColor='transparent'/>\n                        </NavLink>\n                                : null}\n            </div>\n        )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        avatar : state.avatar\n    }\n}\n\nexport default connect(mapStateToProps)(SignedInLinks)","import React from 'react'\nimport './navbar.scss'\nimport SignedInLinks from './signedInLinks'\nimport { NavLink } from 'react-router-dom'\n// import { useLocation } from 'react-router-dom'\n\nconst Navbar = () => {\n    // const location = useLocation();\n    // console.log(location.pathname);\n\n    return (\n    <div className='nav-scaffold'>\n        <div className='nav-container'>\n            <div className=\"logo\">\n                <NavLink to='/'>\n                    <span className='logo-neu'>neu</span> \n                    <span className='logo-board'>board</span> \n                </NavLink>\n            </div>\n            <div className=\"nav-links\">\n                <SignedInLinks/>\n            </div>\n        </div>\n    </div>)\n}\n\nexport default Navbar","import React from 'react'\nimport Avatar from 'react-nice-avatar'\nimport moment from 'moment'\nimport './post.scss'\nimport Zoom from 'react-medium-image-zoom'\nimport 'react-medium-image-zoom/dist/styles.css'\n\nconst isBlank = (str) => { \n    return (!str || str.length <= 0 ||  str.trim() === '')\n}\n\nconst Post = (props) => {\n    // console.log(props)\n    const {user,avatar,message,date,media} = props.message\n    return (\n        <div className=\"post\">\n            <div className=\"post-line\"></div>\n            <Avatar  style={{ width: '90px', height: '90px', minWidth : '90px', minHeight : '90px', marginLeft:'10px' }} {...avatar} bgColor='transparent'/>\n            {/* <div className=\"post-avatar\"> */}\n            {/* </div> */}\n            <div className=\"post-content\">\n                <div className=\"post-title no-select\"><p>{user}</p></div>\n                <div className=\"post-message user-selectable\">{message}</div>\n                {\n                    isBlank(media) ? null : \n                    <div className=\"post-media\">\n                        <Zoom>\n                            <img src={media} alt='Link broken :/'/> \n                        </Zoom>\n                    </div>\n                }\n                <div className=\"post-time\"><p>-{moment(date).calendar()}</p></div>\n            </div>\n    </div>\n    )\n}\n\nexport default Post","import React from 'react'\nimport Post from './post'\nimport './dashboard.scss'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport {toast} from 'react-toastify'\n\n\nvar dateNow = Date.now()\n\nconst isNewMsg = (message) => {\n  if(message.date > dateNow && localStorage.getItem('username') !== message.user ){\n    console.log('NEW POST')\n    console.log(message)\n    toast.info(`New message from ${message.user}!`)\n    dateNow = Date.now()\n  }\n}\n\nconst Dashboard = ({messages}) => {\n        if(messages && messages.length > 0){\n          isNewMsg(messages[0])\n        }\n        return (\n          <div className='dashboard-scaffold'>\n            <div className='dashboard-posts hide-scrollbar'>\n                <div className=\"dashboard\">\n                    { messages && messages.map((message,index) => (\n                        <Post key={index} message={message} />\n                    ))}\n                </div>\n            </div>\n            <div className=\"dashboard-welcome no-select\">\n              <p id='text-welcome'>welcome to neuboard!</p>\n              <p id='text-whatisthis'>Post a message, meme or a random thought.</p>\n              <p id='text-madewith'>Made with 💜 using React and Firebase</p> \n            </div>\n          </div>\n          \n        );\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state)\n    // console.log(state.firestore);\n    const messages = state.firestore.ordered.messages;\n    // console.log(messages)\n    return {\n      messages,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect(() => [{collection: 'messages',orderBy : [\"date\", \"desc\"] }])\n  )(Dashboard);\n","export default __webpack_public_path__ + \"static/media/color-palette.f4f249bb.svg\";","import React from 'react'\nimport palette from '../../assets/color-palette.svg'\nimport { HexColorPicker } from \"react-colorful\";\n\nconst capitalize = (letter) => {\n    return letter && letter[0].toUpperCase() + letter.slice(1);\n}\n\nfunction Option(props) {\n    const {stateValue, id,name} = props \n    return (\n            <p id={id} className={`opt ${stateValue === id ? 'active' : ''}`} >{name}</p>\n    )\n}\n\nfunction AvatarAttribute(props) {\n    return (\n        <div>\n            <div className=\"color-picker\">\n                <p className=\"field\">{props.title}</p>\n                    {\n                        props.pickerID !== undefined ? \n                        <div className=\"colorPanelWrapper\">\n                            <img src={palette}  alt=\"Custom Color\" className='icon-palette' id={props.pickerID} onClick={props.onPickerClick}/>\n                                { props.pickerType ?  (<HexColorPicker className='colorPanel' color={props.colorValue} onChange={props.onColorChange    }/>) : null }    \n                        </div> : null\n                    }\n            </div>\n                \n            <div className=\"opts\" id={props.id} onClick={props.onClick}>\n                    {props.styleOpts.map((style,index) => (\n                        <Option key={index} id={style} name={ capitalize( props.optsObj !== undefined ? props.optsObj[style] : style)} stateValue={props.stateValue}/>\n                    ))}\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AvatarAttribute\n","import React, { Component } from 'react'\nimport Avatar from 'react-nice-avatar'\nimport './CustomAvatar.scss'\nimport AvatarAttribute from './AvatarAttribute'\nimport { connect } from 'react-redux'\nimport {updateAvatar} from '../..//store/actions/avatarActions'\n\nexport class CustomAvatar extends Component {\n    constructor(props){\n        super(props)\n        // console.log(props)\n        this.state = {\n                openHairColorPicker : false,\n                openShirtColorPicker : false,\n                openFaceColorPicker : false,\n                showRandomStylesTooltip : true,\n        }\n\n        this.styleOpts = {\n            sex : ['man', 'woman'],\n            faceColor : {'#F9C9B6' : 'Light','#de937d': 'Brown','#AC6651' : 'Dark'},\n            earSize : ['small','big'],\n            hairStyle : {'normal':'Normal', 'thick':'Thick', 'mohawk':'Mohowk', 'womanLong':'Long', 'womanShort':'Short'},\n            eyeStyle : ['circle', 'oval', 'smile'],\n            glassesStyle : ['none', 'round', 'square'],\n            noseStyle : ['short', 'long', 'round'],\n            mouthStyle : ['laugh', 'smile', 'peace'],\n            shirtStyle : ['hoody', 'short', 'polo']\n        }\n    }\n\n\n    updateAvatarinState(newStyle) {\n        this.props.updateAvatarAction(newStyle)\n    }\n\n    handleClick = (e) => {\n        const [target,parentClass] = [e.target.id,e.currentTarget.id]\n        // console.log(parentClass)\n        // console.log(target)\n        if(target !== parentClass){\n            // this.setState({[parentClass] : target }, () => this.updateAvatarinState())\n            this.updateAvatarinState({[parentClass] : target })\n        }\n    }\n\n\n\n    capitalize = (letter) => {\n        return letter && letter[0].toUpperCase() + letter.slice(1);\n    }\n\n    Option(props) {\n        const {stateValue, id,name} = props \n        // console.log(stateValue,id)\n        return (\n                <p id={id} className={`opt ${stateValue === id ? 'active' : ''}`} >{name}</p>\n        )\n    }\n\n    randomVal = (array) => array[Math.floor(Math.random() * array.length)];\n\n    onChangeColor = function (type,color) {\n        // console.log(e,type)\n        // console.log(type,color)\n        // console.log(type.hex)   \n        // this.setState({[type] : color}, () => this.updateAvatarinState())\n        this.updateAvatarinState({[type] : color})\n    }\n\n    toggleColorPicker = (e) => {\n        const target = e.target.id\n        this.setState({[target] : !(this.state[target])}, () => console.log(this.state))\n    }\n\n    closeColorPicker = (e) => {\n        // console.log(e)\n        if((this.state.openHairColorPicker || this.state.openShirtColorPicker || this.state.openFaceColorPicker)){\n            if(e.type === 'click' && !(e.target.className.includes('react-colorful'))){\n                console.log('closing all color pickers')\n                this.setState({openHairColorPicker: false, openShirtColorPicker: false, openFaceColorPicker : false})\n            }\n        }\n    }\n\n    handleBlur = (e) => {\n        console.log('blur')\n    }\n\n    randomVal   = (array) => array[Math.floor(Math.random() * array.length)];\n    // https://stackoverflow.com/a/5092872\n    randomColor = () => \"#000000\".replace(/0/g,function(){return (~~(Math.random()*16)).toString(16);});\n\n    generateRandomAvatar = (callType = '') => {\n        if(this.state.showRandomStylesTooltip && callType !== 'init') {\n            this.setState({showRandomStylesTooltip : false})\n        }\n        console.log(this.randomVal(this.styleOpts.faceColor))\n        this.updateAvatarinState({\n            isPlaceholder : false,\n            sex : this.randomVal(this.styleOpts.sex),\n            faceColor : this.randomVal(Object.keys(this.styleOpts.faceColor)),\n            earSize : this.randomVal(this.styleOpts.earSize),\n            hairColor : this.randomColor(),\n            hairStyle : this.randomVal(Object.keys(this.styleOpts.hairStyle)),\n            eyeStyle : this.randomVal(this.styleOpts.eyeStyle),\n            glassesStyle : this.randomVal(this.styleOpts.glassesStyle),\n            noseStyle : this.randomVal(this.styleOpts.noseStyle),\n            mouthStyle : this.randomVal(this.styleOpts.mouthStyle),\n            shirtStyle : this.randomVal(this.styleOpts.shirtStyle),\n            shirtColor : this.randomColor(),\n        })\n    }\n\n    componentDidMount() {\n        if(this.props.avatar.isPlaceholder === true){\n            this.generateRandomAvatar('init')\n        }\n    }\n\n    render() {\n        // console.log(this.styleOpts.sex)\n        var AVTR = {} \n        for (const [key, value] of Object.entries(this.props.avatar)) {\n            // console.log(key)\n            // console.log(this.props.avatar[key])\n            AVTR[key] = value\n          }\n\n        const {openHairColorPicker,\n            openShirtColorPicker,openFaceColorPicker,showRandomStylesTooltip} = this.state\n        return (\n            <div className='custom-avatar-scaffold'>\n                <div className='custom-avatar-container no-select'>\n                    {\n                        (showRandomStylesTooltip) ? (<p style={{textAlign : 'center',fontSize:'13px'}}>Click avatar to generate random styles</p>) : null\n                    }    \n                    <div className='avatar' onClick={this.generateRandomAvatar}>\n                        <Avatar  style={{ width: '8rem', height: '8rem' }} \n                             {...AVTR} bgColor='transparent'/>\n                    </div>\n                    <div className=\"info\" onClick={this.closeColorPicker}>\n                        {/* <AvatarAttribute title='SEX' id='sex' styleOpts={this.styleOpts['sex']} stateValue={sex} onClick={this.handleClick}/> */}\n                        <AvatarAttribute title='FACE' id='faceColor' styleOpts={Object.keys(this.styleOpts.faceColor)} optsObj={this.styleOpts.faceColor} stateValue={AVTR.faceColor} onClick={this.handleClick}\n                            pickerID = 'openFaceColorPicker' onPickerClick={this.toggleColorPicker} pickerType={openFaceColorPicker} colorValue={AVTR.faceColor} onColorChange={this.onChangeColor.bind(this,'faceColor')}\n                        />\n                        <AvatarAttribute title='HAIR' id='hairStyle' styleOpts={Object.keys(this.styleOpts.hairStyle)} optsObj={this.styleOpts.hairStyle} stateValue={AVTR.hairStyle} onClick={this.handleClick}\n                            pickerID = 'openHairColorPicker' onPickerClick={this.toggleColorPicker} pickerType={openHairColorPicker} colorValue={AVTR.hairColor} onColorChange={this.onChangeColor.bind(this,'hairColor')}\n                        />\n                        <AvatarAttribute title='EYES' id='eyeStyle' styleOpts={this.styleOpts['eyeStyle']} stateValue={AVTR.eyeStyle} onClick={this.handleClick}/>\n                        <AvatarAttribute title='GLASSES' id='glassesStyle' styleOpts={this.styleOpts['glassesStyle']} stateValue={AVTR.glassesStyle} onClick={this.handleClick}/>\n                        <AvatarAttribute title='EAR' id='earSize' styleOpts={this.styleOpts['earSize']} stateValue={AVTR.earSize} onClick={this.handleClick}/>\n                        <AvatarAttribute title='NOSE' id='noseStyle' styleOpts={this.styleOpts['noseStyle']} stateValue={AVTR.noseStyle} onClick={this.handleClick}/>\n                        <AvatarAttribute title='MOUTH' id='mouthStyle' styleOpts={this.styleOpts['mouthStyle']} stateValue={AVTR.mouthStyle} onClick={this.handleClick}/>\n                        <AvatarAttribute title='SHIRT' id='shirtStyle' styleOpts={this.styleOpts['shirtStyle']} stateValue={AVTR.shirtStyle} onClick={this.handleClick}\n                            pickerID = 'openShirtColorPicker' onPickerClick={this.toggleColorPicker} pickerType={openShirtColorPicker} colorValue={AVTR.shirtColor} onColorChange={this.onChangeColor.bind(this,'shirtColor')}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        avatar : state.avatar\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateAvatarAction : (avatarStyle) => dispatch(updateAvatar(avatarStyle))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CustomAvatar)\n\n\n\n// { <div className=\"field\">\n//     <p>HAIR</p>\n//     <div className=\"colorPanelWrapper\">\n//         <img src={palette}  alt=\"Custom Color\" className='icon-palette' id='openHairColorPicker'  onBlur={this.handleBlur} onClick={this.toggleColorPicker}/>\n//         { openHairColorPicker ?  (<HexColorPicker className='colorPanel' id='hairColor' color={hairColor} onChange={this.onChangeColor.bind(this,'hairColor')}/>) : null }                                    \n//     </div>\n// </div>\n// <div className=\"opts\" id='hairStyle' onClick={this.handleClick}>\n//     {Object.keys(this.styleOpts.hairStyle).map((style,index) => (\n//         <this.Option key={index} id={style} name={this.capitalize(this.styleOpts.hairStyle[style])} stateValue={hairStyle}/>\n//     ))}\n// </div> }\n\n// { <div className=\"field\">\n//     <p>SHIRT</p>\n//     <div className=\"colorPanelWrapper\">\n//     <img src={palette}  alt=\"Custom Color\" className='icon-palette' id='openShirtColorPicker' onClick={this.toggleColorPicker}/>\n//     { openShirtColorPicker ?  (<HexColorPicker className='colorPanel' color={shirtColor} onChange={this.onChangeColor.bind(this,'shirtColor')}/>) : null }    \n//         </div>\n// </div>\n// <div className=\"opts\" id='shirtStyle' onClick={this.handleClick}>\n//     {this.styleOpts['shirtStyle'].map((style,index) => (\n//         <this.Option key={index} id={style} name={this.capitalize(style)} stateValue={shirtStyle}/>\n//     ))}\n// </div> }","export const updateAvatar = (avatarStyle) => {\n    return (dispatch, getState) => {\n        dispatch({ type : \"UPDATE_AVATAR\", avatarStyle })\n    }\n}\n","\nimport React from 'react'\nimport './SubmitButton.scss'\n\nfunction SubmitButton(props) {\n    return (\n        <div>\n            <input id=\"trigger\"  onClick={props.onClick} className={ props.infoFilled? 'animate-submit' : 'disable-submit'} type=\"checkbox\" hidden></input>\n            <label className=\"trigger\" title={props.infoFilled? '' : 'Fill the required info' } htmlFor=\"trigger\">Submit</label>\n            <div className=\"dots\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default SubmitButton\n","export default __webpack_public_path__ + \"static/media/gif.eca28f8d.svg\";","export default __webpack_public_path__ + \"static/media/gif-clicked.e11b0607.svg\";","import React, { Component } from 'react'\nimport './UserInfo.scss'\nimport { uploadMessage } from '../../store/actions/messageActions'\nimport { connect } from 'react-redux'\nimport SubmitButton from './SubmitButton';\nimport {toast} from 'react-toastify'\nimport ReactGiphySearchbox from 'react-giphy-searchbox'\nimport gifSVG from '../../assets/gif.svg'\nimport gifSVGClicked from '../../assets/gif-clicked.svg'\n\nclass UserInfo extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name : '',\n            message : '',\n            media : '',\n            infoFilled : false,\n            gifToggle : false\n        }\n        // this.info = {\n        //     name : '',\n        //     message : '',\n        //     infoFilled : false,\n        // }\n    }\n\n    isBlank(str) { \n        return (!str || str.length <= 0 ||  str.trim() === '')\n    }\n\n    handleSubmitState = () => {\n        const {name,message,infoFilled} = this.state\n        // console.log(this.state)\n\n        // console.log(!(this.isBlank(name)) , !(this.isBlank(message)) , !infoFilled)\n        if(!(this.isBlank(name)) && !(this.isBlank(message)) &&  !infoFilled){\n            this.setState({infoFilled : true})\n        }else if ( (this.isBlank(name) || (this.isBlank(message))) && infoFilled){\n            this.setState({infoFilled : false})\n        }\n    }\n\n    handleInput(type,e){\n        // console.log(e.target.value)\n        // console.log(type)\n        \n        // this.state[type] = e.target.value\n        this.setState({ [type] : e.target.value },() => this.handleSubmitState())\n    }\n\n    submitDataToFireStore = () => {\n        const {name, message, media} = this.state\n        this.props.uploadMessageAction({user: name, message : message,media: media, \n                                            avatar: this.props.avatar,approved: false,date: Date.now()})\n        console.log('message sent')\n        this.setState({infoFilled : false,message:'',media : ''})\n        localStorage.setItem('username', name)\n    }\n\n    handleSubmit = async () => {\n        const {media, infoFilled} = this.state\n        this.setState({infoFilled: false})\n        if(infoFilled){\n            toast.info('Message is being submitted',{autoClose : 2500})\n            if(this.isBlank(media)){\n                this.submitDataToFireStore()\n            }else{\n                // https://stackoverflow.com/a/55880263   \n                var image = new Image();\n                image.onload = () => {\n                  if (image.width > 0) {\n                    console.log(\"image exists\");\n                    this.submitDataToFireStore()\n                  }\n                }\n                image.onerror = () => {\n                  console.log(\"image doesn't exist\");\n                  toast.error('Please post a valid media link',{autoClose : 6000})\n                  this.setState({media : ''})\n                  this.handleSubmitState()\n                }\n                image.src = media;\n            }\n        }\n    }\n\n    componentDidMount() {\n        if(localStorage.getItem('username')){\n            this.setState({name : localStorage.getItem('username')})\n        }\n    }\n\n    handleGIFSelect = (gif) => {\n\n        console.log(gif)\n        this.setState({media : gif.images.fixed_height.url})\n    }\n\n\n    handleGIFBlur = () => {\n        console.log('blurred')\n        setTimeout(() => this.setState({gifToggle : false}), 1100)\n        // \n    }\n\n    handleGIFToggle= () => {\n        this.setState({gifToggle : !this.state.gifToggle})\n    }\n\n\n    render() {\n        const { name,message,media,infoFilled,gifToggle} = this.state\n        return (\n            <div className='name-message-scaffold'>\n                <div className=\"name-message-container\">\n                    {/* <form onSubmit={this.handleSubmit}> */}\n                        <label  htmlFor='input-name'> <span>Name</span><span>*</span></label>\n                        <input type=\"text\" value={name} maxLength=\"30\"  id='input-name' className=\"form-input user-selectable\" onChange={this.handleInput.bind(this,'name')}></input>\n                        \n                        <label  htmlFor='input-media'> <p>Image Link</p></label>\n                        <div className='input-container'>\n                            <div className='giphy-container' onBlur = {this.handleGIFBlur}>\n                                {\n                                    gifToggle ? <ReactGiphySearchbox\n                                                apiKey=\"5qq9RvhQDJlcqQcoUxtFdcaK3OpqKPGE\" \n                                                onSelect={this.handleGIFSelect}\n                                                wrapperClassName = 'giphy-container'\n                                                autoFocus = {true}\n                                                rating = 'r'\n                                            /> : null\n                                }\n                                \n                            </div>\n                            <input type=\"text\" value={media} id='input-media' className=\"form-input user-selectable\" onChange={this.handleInput.bind(this,'media')}></input>\n                            <div id='gif-toggle' onClick={this.handleGIFToggle}>\n                                <img  src={gifToggle? gifSVGClicked : gifSVG} alt=\"GIF\" />\n                            </div>\n                        </div>\n                        <label htmlFor='input-message'><span>Message</span><span>*</span></label>\n                        <textarea id='input-message' value={message} maxLength=\"160\" className=\"form-input user-selectable\" onChange={this.handleInput.bind(this,'message')}></textarea>\n                        <div className='button-container no-select'>\n                            {/* <div className='neu-button' onClick={this.handleSubmit}>Submit</div> */}\n                            <SubmitButton onClick={this.handleSubmit} infoFilled={infoFilled}/>\n                        </div>\n                    {/* </form> */}\n                </div>\n            </div>  \n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        avatar : state.avatar\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        uploadMessageAction : (messagePayload) => dispatch(uploadMessage(messagePayload))\n    }\n}\n\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(UserInfo)\n","import {toast} from 'react-toastify'\n\nexport const uploadMessage = (messagePayload) => {\n    return (dispatch, getState,{ getFirebase }) => {\n\n        const firestore = getFirebase().firestore();\n        firestore.collection('messages').add({\n            ...messagePayload\n        }).then((response) => {\n            console.log(response.id)\n            toast.success('Message sent!')\n            dispatch({ type : \"UPLOAD_MESSAGE\", messagePayload })\n        }).catch((err) => {\n            dispatch({ type : \"UPLOAD_MESSAGE_ERROR\", err })\n            toast.error(`Couldn't send message! Retry like an hour later.`)\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport './writeMessage.scss'\nimport CustomAvatar from '../avatars/CustomAvatar'\nimport UserInfo from '../avatars/UserInfo'\n\nclass WriteMessage extends Component {\n    render() {\n        return (\n            <div className='write-message-scaffold'>\n                <CustomAvatar/>\n                <UserInfo/>\n            </div>\n        )\n    }\n}\n\nexport default WriteMessage\n","import React from 'react'\nimport './App.scss';\nimport Navbar from './components/layout/navbar'\nimport Dashboard from './components/dashboard/dashboard'\nimport WriteMessage from './components/projects/writeMessage'\nimport { BrowserRouter,Switch,Route } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n// import {toast} from 'react-toastify'\n\n\nfunction App() {\n  // toast.info('Message sent!',{autoClose : 600000})\n  return (\n    <BrowserRouter>\n      <ToastContainer/>\n      <Navbar/>\n      <Switch>\n        <Route exact path='/' component={Dashboard}/>\n        <Route exact path='/add' component={WriteMessage}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\n    messageList : [\n        {user:'Peter Parker', message:\"This is a message\", timestamp:'Sun May 11 2020'},\n        {user:'Bruce Banner', message:\"It do be like that sometimes\", timestamp:'Sat April 22 2020'}\n    ]\n} \n\nconst messagesReducer = (state = initState,action) => {\n    switch(action.type){\n        case 'UPLOAD_MESSAGE' : \n            console.log('uploaded message' , action.messagePayload)\n            break;\n        case 'UPLOAD_MESSAGE_ERROR' : \n            console.log('Upload Message Error' , action.error)\n            break;\n        default: \n            // console.log('uncaught switch case')\n    }\n    return state\n}\n\nexport default messagesReducer","// const initState = {\n//             sex: 'man',faceColor : '#F9C9B6',earSize : 'small',hairColor : 'lemonchiffon',hairStyle : 'thick',eyeStyle : 'smile',\n//                 glassesStyle : 'round',noseStyle : 'short',mouthStyle : 'smile',shirtStyle : 'hoody',shirtColor : 'turquoise',\n// } \n\nconst avatarReducer = (state = {isPlaceholder : true, hairColorRandom:true},action) => {\n    switch(action.type){\n        case 'UPDATE_AVATAR' : \n            console.log('update avatar' , {...state, ...action.avatarStyle })\n            return {...state, ...action.avatarStyle }\n        default: \n            // console.log('uncaught switch case')\n    }\n    return state\n}\n\nexport default avatarReducer","import {combineReducers} from \"redux\";\nimport {firebaseReducer} from \"react-redux-firebase\";\nimport {firestoreReducer} from \"redux-firestore\";\nimport messagesReducer from './messagesReducer'\nimport avatarReducer from './avatarReducer'\n\n\nconst rootReducer = combineReducers({\n    messages : messagesReducer,\n    avatar   : avatarReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCh1bWSSV6sGFc81yxcQHyVGxiAizRYz48\",\n    authDomain: \"neu-board.firebaseapp.com\",\n    projectId: \"neu-board\",\n    storageBucket: \"neu-board.appspot.com\",\n    messagingSenderId: \"668588047379\",\n    appId: \"1:668588047379:web:f76373774d58ce532353e6\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({timestampsInSnapshots : true})\n\nexport default firebase\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {  createFirestoreInstance  } from 'redux-firestore'\nimport {   getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport firebaseConfig   from './config/firebase'\n\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk.withExtraArgument({ getFirebase })),\n);\n\n\nconst rrfProps = {\n  firebase: firebaseConfig,\n  config: {},\n  dispatch: store.dispatch,\n  createFirestoreInstance, //since we are using Firestore\n};\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n          <App />\n        </ReactReduxFirebaseProvider>\n    </Provider>, \n  document.getElementById('root')\n);"],"sourceRoot":""}